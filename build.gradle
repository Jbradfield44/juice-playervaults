plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
	maven { url = 'https://jitpack.io' }
	mavenCentral()
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}
loom {
	splitEnvironmentSourceSets()
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:1.21.1"
	mappings loom.officialMojangMappings()

	// LuckPerms API (not platform-specific)
	implementation "net.luckperms:api:5.4"
	// Fabric loader
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"

	// Fabric API (modular form, required after switching to Mojang mappings)
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}